---
- name: Install trunk-server
  remote_user: root
  hosts: all
  become: true
  gather_facts: False
  vars:
    letsencrypt_email: admin@email.com
    DOMAIN: "domain.com"
    DO_APP_TOKEN: "Put Digital Ocean App Token Here"
    BACKEND_DOMAIN: 'api.{{ DOMAIN }}'
    FRONTEND_DOMAIN: 'www.{{ DOMAIN }}'
    ADMIN_DOMAIN: 'admin.{{ DOMAIN }}'
    ACCOUNT_DOMAIN: 'account.{{ DOMAIN }}'

  tasks:
  - name: install python
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python)


  - name: Gather facts now that Python is installed
    setup:
      gather_subset:
      - '!all'

  - name: Add Docker GPG key
    apt_key: url=https://download.docker.com/linux/ubuntu/gpg

  - name: Add Docker APT repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable

  - name: Install list of packages
    apt:
      name: ['apt-transport-https','ca-certificates','curl','software-properties-common','docker-ce', 'git']
      state: present
      update_cache: yes
  - name: Update all packages to the latest version
    apt:
      upgrade: dist
  - name: Install Docker Compose (if configured).
    get_url:
      url: https://github.com/docker/compose/releases/download/1.28.2/docker-compose-Linux-x86_64
      dest: /usr/local/bin/docker-compose
      mode: 0755
  - name: Install Trunk Server
    git:
      repo: 'https://github.com/openmhz/trunk-server.git'
      dest: /root/trunk-server
  - name: Install Certbot package
    apt:
     name: ['certbot', 'python3-certbot-dns-digitalocean']
     state: present
     update_cache: yes
  - name: Creating a secrets directory
    file:
      path: "~/.secrets/certbot/"
      state: directory
  - name: Add secrets to secrets file
    copy:
      dest: "~/.secrets/certbot/digitalocean.ini"
      content: |
        # DigitalOcean API credentials used by Certbot
        dns_digitalocean_token = {{DO_APP_TOKEN}}
  - name: Creating an AWS credenctials directory
    file:
      path: "~/.aws/"
      state: directory
  - name: Create an AWS Crentials file
    copy:
      dest: "~/.aws/credentials"
      content: |
        [default]
        aws_access_key_id = [..]
        aws_secret_access_key = [..]
  - name: generate certs (first time)
    become: yes
    # become_user: '{{ deploy_user }}'
    shell: "/usr/bin/certbot certonly   --dns-digitalocean --dns-digitalocean-credentials ~/.secrets/certbot/digitalocean.ini  -d {{BACKEND_DOMAIN}} -d {{FRONTEND_DOMAIN}} -d {{DOMAIN}} -d {{ADMIN_DOMAIN}} -d {{ACCOUNT_DOMAIN}} --email {{ letsencrypt_email}} --non-interactive --agree-tos --cert-name {{DOMAIN}}"
  - name: Copy certs to Trunk Server build dir
    synchronize:
      src: "/etc/letsencrypt/live/{{DOMAIN}}/"
      dest: /root/trunk-server/nginx-proxy/prod/certs/
      copy_links: yes
    delegate_to: "{{ inventory_hostname }}"

  - name: display post install message
    debug:
      msg:
        - 'Congratulations - the installation is complete! (assuming there were no errors above...)'
        - 'Next steps:'
        - '- SSH to the server'
        - '- Setup ~/.aws/credentials'
        - '- Copy prod.env.example to prod.env'
        - '- customize: prod.env'
        - '- run: ./docker-prod.sh build'
        - '- run: ./docker-prod.sh up'
